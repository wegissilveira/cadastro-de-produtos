[{"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputConfig.tsx":"1","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\reducers\\index.ts":"2","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.ts":"3","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\action-creators\\index.ts":"4","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Input\\Input.tsx":"5","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\Home.tsx":"6","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormOutputConfig\\FormOutputConfig.tsx":"7","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputDesk\\FormInputDesk.tsx":"8","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.tsx":"9","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\App.tsx":"10","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputMobile\\FormInputMobile.tsx":"11","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\OpenFormButton\\OpenFormButton.tsx":"12","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\InputSearch\\InputSearch.tsx":"13","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductListMobile.tsx":"14","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductsListMobileHeader\\ProductsListMobileHeader.tsx":"15","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsList.tsx":"16","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Toastify\\Toastify.tsx":"17","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsListQtde\\ProductsListQtde.tsx":"18","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsListHeader\\ProductsListHeader.tsx":"19","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.js":"20","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\index.ts":"21","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\services\\requests.ts":"22","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useActions.ts":"23","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useUpdateSearch.ts":"24","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useInitProducts.ts":"25","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useSetOrder.ts":"26","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\functions.ts":"27","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\items.ts":"28","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\data\\products_seed.ts":"29"},{"size":6467,"mtime":1670960220677,"results":"30","hashOfConfig":"31"},{"size":1085,"mtime":1670960220660,"results":"32","hashOfConfig":"31"},{"size":131,"mtime":1670960219655,"results":"33","hashOfConfig":"31"},{"size":773,"mtime":1670960220652,"results":"34","hashOfConfig":"31"},{"size":1827,"mtime":1670960219705,"results":"35","hashOfConfig":"31"},{"size":856,"mtime":1670960219669,"results":"36","hashOfConfig":"31"},{"size":648,"mtime":1670960219700,"results":"37","hashOfConfig":"31"},{"size":230,"mtime":1670960219683,"results":"38","hashOfConfig":"31"},{"size":782,"mtime":1663437970116,"results":"39","hashOfConfig":"31"},{"size":622,"mtime":1670960219610,"results":"40","hashOfConfig":"31"},{"size":805,"mtime":1670960219689,"results":"41","hashOfConfig":"31"},{"size":497,"mtime":1670960219694,"results":"42","hashOfConfig":"31"},{"size":1501,"mtime":1670960219712,"results":"43","hashOfConfig":"31"},{"size":4794,"mtime":1670960220720,"results":"44","hashOfConfig":"31"},{"size":1475,"mtime":1670960219726,"results":"45","hashOfConfig":"31"},{"size":7059,"mtime":1670960219732,"results":"46","hashOfConfig":"31"},{"size":1065,"mtime":1670960219750,"results":"47","hashOfConfig":"31"},{"size":2359,"mtime":1670960219744,"results":"48","hashOfConfig":"31"},{"size":1852,"mtime":1670960219738,"results":"49","hashOfConfig":"31"},{"size":526,"mtime":1670960219637,"results":"50","hashOfConfig":"31"},{"size":51,"mtime":1670960219657,"results":"51","hashOfConfig":"31"},{"size":1906,"mtime":1670960219649,"results":"52","hashOfConfig":"31"},{"size":261,"mtime":1670960219627,"results":"53","hashOfConfig":"31"},{"size":1374,"mtime":1670960219635,"results":"54","hashOfConfig":"31"},{"size":2363,"mtime":1670960220630,"results":"55","hashOfConfig":"31"},{"size":1437,"mtime":1670960219632,"results":"56","hashOfConfig":"31"},{"size":1232,"mtime":1670960219621,"results":"57","hashOfConfig":"31"},{"size":458,"mtime":1670960219623,"results":"58","hashOfConfig":"31"},{"size":1702,"mtime":1670960219619,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"cutbge",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputConfig.tsx",["123","124","125"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport classes from './FormInputConfig.module.scss'\r\n\r\nimport Input from 'views/Home/homeComponents/Input/Input'\r\nimport useInitProducts from 'hooks/useInitProducts'\r\nimport { InitialState, ProductsList, ProductForm, Validation } from 'common/types'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst FormInputConfig = () => {\r\n   const [formIsValidState, setFormIsValidState] = useState(false)\r\n   const [productForm, setProductForm] = useState<ProductForm[]>([\r\n      {\r\n         field: 'id',\r\n         config: {\r\n            elementType: false,\r\n            value: '',\r\n            validation: {},\r\n            valid: true,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'nome',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Nome do Produto',\r\n               name: 'nome',\r\n            },\r\n            label: 'Nome do Produto',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'qtde',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Quantidade',\r\n               name: 'qtde',\r\n            },\r\n            label: 'Quantidade',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'valor',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Valor Unitário',\r\n               name: 'valor',\r\n            },\r\n            label: 'Valor Unitário',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'valorTotal',\r\n         config: {\r\n            elementType: false,\r\n            value: 0,\r\n            validation: {},\r\n            valid: true,\r\n            touched: false\r\n         }\r\n      }\r\n   ])\r\n \r\n   const productsDataState = useSelector((state: InitialState) => state.productsDataState)\r\n   const { initProducts } = useInitProducts()\r\n   \r\n   const addIdHandler = (products: ProductsList[]) => {\r\n      const ids: number[] = []\r\n      products.forEach(product => {\r\n         ids.push(product.id!)\r\n      })\r\n\r\n      const currentIds = ids.reduce((sparse: number[], i) => (sparse[i] = 1, sparse), [])\r\n      const missingIds = [...currentIds.keys()].filter(i => i && !currentIds[i])\r\n\r\n      let new_id\r\n      if (missingIds.length > 0) {\r\n         new_id = Math.min(...missingIds)\r\n      } else {\r\n         new_id = ids.length === 0 ? 1 : Math.max(...ids) + 1\r\n      }\r\n\r\n      return new_id\r\n   }\r\n\r\n   const checkFormValidityHandler = (value: string | number, rules: Validation) => {\r\n      let isValid = false\r\n      if (rules.required) {\r\n         isValid = value.toString().trim() !== '' && value !== 0\r\n      }\r\n\r\n      return isValid\r\n   }\r\n\r\n   const inputChangeHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>, i: number) => {\r\n      const updatedProduct = [...productForm]\r\n      const updatedProductField = { ...updatedProduct[i] }\r\n  \r\n      let value = e.target.value\r\n      let name = e.target.name\r\n\r\n      if (name === 'nome') {\r\n         value = value.replace(/^\\s/, \"\")\r\n      }\r\n\r\n      if (name === 'qtde' || name === 'valor') {\r\n         value = value.replace(/^0|[^\\d.]|\\.(?=.*\\.)/g, \"\")\r\n      }\r\n\r\n      updatedProductField.config.value = value\r\n      updatedProductField.config.valid = checkFormValidityHandler(updatedProductField.config.value, updatedProductField.config.validation!)\r\n      updatedProductField.config.touched = true\r\n\r\n      updatedProduct[i] = updatedProductField\r\n      updatedProduct[4].config.value = Number(updatedProduct[2].config.value) * Number(updatedProduct[3].config.value)\r\n\r\n      let formIsValid = true\r\n      updatedProduct.forEach(item => {\r\n         formIsValid = item.config.valid && formIsValid\r\n      })\r\n      \r\n      setProductForm(updatedProduct)\r\n      setFormIsValidState(formIsValid)\r\n   }, [productForm])\r\n\r\n   const submitProductHandler = (products: ProductsList[]) => {\r\n      initProducts('add', products)\r\n      cleanForm()\r\n   }\r\n\r\n   const formatFormHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault()\r\n\r\n      const productFormLocal = [...productForm]\r\n\r\n      productFormLocal[2].config.value = Number(productFormLocal[2].config.value)\r\n      productFormLocal[3].config.value = Number(productFormLocal[3].config.value)\r\n\r\n      const productsList = productsDataState\r\n      productFormLocal[0].config.value = addIdHandler(productsList)\r\n\r\n      const productValues = productFormLocal.reduce<Record<string, any>>((obj, item) => (\r\n         obj[item.field] = item.config.value, obj\r\n      ), {})\r\n\r\n      productsList.push(productValues)\r\n      submitProductHandler(productsList)\r\n      setFormIsValidState(false)\r\n   }\r\n\r\n   const cleanForm = () => {\r\n      const productFormLocal = [...productForm]\r\n\r\n      productFormLocal.forEach((item, i) => {\r\n         item.config.value = ''\r\n         if (i > 0 && i < 4) item.config.valid = false\r\n         if (i > 0 && i < 4) item.config.touched = false\r\n      })\r\n      \r\n      setProductForm(productFormLocal)\r\n   }\r\n\r\n   useEffect(() => {\r\n      initProducts('load')\r\n   }, [])\r\n\r\n\r\n   return (\r\n      <div className={classes.Insert_product_subContainer}>\r\n         <div>\r\n            <h2>Registre Um Novo Produto</h2>\r\n         </div>\r\n         <form\r\n            onSubmit={formatFormHandler}\r\n            className={classes.Insert_product_form}\r\n         >\r\n            <Input\r\n               productForm={productForm}\r\n               changed={(e: React.ChangeEvent<HTMLInputElement>, i: number) => inputChangeHandler(e, i)}\r\n            />\r\n            <button disabled={!formIsValidState}>\r\n               <p>Inserir Produto</p>\r\n               <FontAwesomeIcon icon=\"chevron-circle-right\" />\r\n            </button>\r\n\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default FormInputConfig",["126","127"],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\reducers\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\action-creators\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Input\\Input.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\Home.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormOutputConfig\\FormOutputConfig.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputDesk\\FormInputDesk.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\App.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputMobile\\FormInputMobile.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\OpenFormButton\\OpenFormButton.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\InputSearch\\InputSearch.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductListMobile.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductsListMobileHeader\\ProductsListMobileHeader.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsList.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Toastify\\Toastify.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsListQtde\\ProductsListQtde.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsListHeader\\ProductsListHeader.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.js",["128"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { createStore, applyMiddleware, Store } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\n\r\nimport reducer from './store/reducers';\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n",["129","130"],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\services\\requests.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useActions.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useUpdateSearch.ts",["131"],"import { useEffect } from 'react'\r\n\r\nimport { useActions } from 'hooks/useActions'\r\nimport { useSelector } from 'react-redux'\r\nimport { InitialState, ProductsList } from 'common/types'\r\n\r\n\r\nconst useUpdateSearch = () => {\r\n   const { setSearch } = useActions()\r\n\r\n   const productsDataState = useSelector((state: InitialState) => state.productsDataState)\r\n   const isSearchOn = useSelector((state: InitialState) => state.isSearchOn)   \r\n   const inputValue = useSelector((state: InitialState) => state.inputValue) \r\n   \r\n   const updateSearch = (inputValueArg = inputValue, isSearchOnArg = isSearchOn) => {  \r\n      const data = !productsDataState ? [] : productsDataState\r\n      if (isSearchOnArg) {\r\n         const products: ProductsList[] = []\r\n         const searchKey = new RegExp(inputValueArg, 'gi')        \r\n         data.forEach(item => {\r\n            if (isSearchOnArg) {\r\n               if (item.nome!.match(searchKey)) {\r\n                  products.push(item)\r\n               } \r\n            } \r\n         })\r\n         if (products.length === 0 && isSearchOnArg) products.push({isEmpty: true})\r\n         setSearch(products, isSearchOnArg, inputValueArg)\r\n      } else {\r\n         setSearch(data, false)\r\n      }\r\n   }\r\n\r\n   useEffect(() => {\r\n      updateSearch()\r\n   }, [productsDataState])\r\n   \r\n   return { updateSearch }\r\n\r\n}\r\n\r\nexport default useUpdateSearch","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useInitProducts.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useSetOrder.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\functions.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\items.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\data\\products_seed.ts",[],{"ruleId":"132","severity":1,"message":"133","line":101,"column":76,"nodeType":"134","messageId":"135","endLine":101,"endColumn":77},{"ruleId":"132","severity":1,"message":"133","line":171,"column":45,"nodeType":"134","messageId":"135","endLine":171,"endColumn":46},{"ruleId":"136","severity":1,"message":"137","line":193,"column":7,"nodeType":"138","endLine":193,"endColumn":9,"suggestions":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":4,"column":40,"nodeType":"146","messageId":"147","endLine":4,"endColumn":45},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"136","severity":1,"message":"148","line":36,"column":7,"nodeType":"138","endLine":36,"endColumn":26,"suggestions":"149"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initProducts'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Store' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'updateSearch'. Either include it or remove the dependency array.",["153"],{"desc":"154","fix":"155"},"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [initProducts]",{"range":"158","text":"159"},"Update the dependencies array to be: [productsDataState, updateSearch]",{"range":"160","text":"161"},[5743,5745],"[initProducts]",[1282,1301],"[productsDataState, updateSearch]"]