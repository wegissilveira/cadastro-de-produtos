[{"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\data\\products_seed.js":"1","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\functions.js":"2","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\items.js":"3","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputConfig.tsx":"4","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\reducers\\index.ts":"5","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.ts":"6","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\action-creators\\index.ts":"7","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Input\\Input.tsx":"8","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\Home.tsx":"9","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormOutputConfig\\FormOutputConfig.tsx":"10","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputDesk\\FormInputDesk.tsx":"11","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.tsx":"12","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\App.tsx":"13","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputMobile\\FormInputMobile.tsx":"14","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\OpenFormButton\\OpenFormButton.tsx":"15","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\InputSearch\\InputSearch.tsx":"16","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductListMobile.tsx":"17","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductsListMobileHeader\\ProductsListMobileHeader.tsx":"18","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsList.tsx":"19","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Toastify\\Toastify.tsx":"20","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsListQtde\\ProductsListQtde.tsx":"21","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsListHeader\\ProductsListHeader.tsx":"22","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.js":"23","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\index.ts":"24","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\services\\requests.ts":"25","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useActions.ts":"26","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useUpdateSearch.ts":"27","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useInitProducts.ts":"28","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useSetOrder.ts":"29"},{"size":1638,"mtime":1662676677224,"results":"30","hashOfConfig":"31"},{"size":1082,"mtime":1662676677228,"results":"32","hashOfConfig":"31"},{"size":330,"mtime":1662676677232,"results":"33","hashOfConfig":"31"},{"size":6467,"mtime":1663023871745,"results":"34","hashOfConfig":"31"},{"size":1085,"mtime":1663021295272,"results":"35","hashOfConfig":"31"},{"size":131,"mtime":1662758637261,"results":"36","hashOfConfig":"31"},{"size":782,"mtime":1663280121561,"results":"37","hashOfConfig":"31"},{"size":1827,"mtime":1663021505982,"results":"38","hashOfConfig":"31"},{"size":856,"mtime":1662676958378,"results":"39","hashOfConfig":"31"},{"size":648,"mtime":1662676953436,"results":"40","hashOfConfig":"31"},{"size":230,"mtime":1662676677284,"results":"41","hashOfConfig":"31"},{"size":623,"mtime":1663192430083,"results":"42","hashOfConfig":"31"},{"size":622,"mtime":1663191191003,"results":"43","hashOfConfig":"31"},{"size":805,"mtime":1663021558487,"results":"44","hashOfConfig":"31"},{"size":497,"mtime":1662676962966,"results":"45","hashOfConfig":"31"},{"size":1501,"mtime":1663022628543,"results":"46","hashOfConfig":"31"},{"size":4794,"mtime":1663278504669,"results":"47","hashOfConfig":"31"},{"size":1471,"mtime":1663023585597,"results":"48","hashOfConfig":"31"},{"size":7061,"mtime":1663278465437,"results":"49","hashOfConfig":"31"},{"size":1064,"mtime":1663190631973,"results":"50","hashOfConfig":"31"},{"size":2357,"mtime":1663190613434,"results":"51","hashOfConfig":"31"},{"size":1801,"mtime":1663189819845,"results":"52","hashOfConfig":"31"},{"size":755,"mtime":1663192481088,"results":"53","hashOfConfig":"31"},{"size":51,"mtime":1663191041502,"results":"54","hashOfConfig":"31"},{"size":1882,"mtime":1663280110801,"results":"55","hashOfConfig":"31"},{"size":261,"mtime":1662676677235,"results":"56","hashOfConfig":"31"},{"size":1374,"mtime":1663278491055,"results":"57","hashOfConfig":"31"},{"size":2473,"mtime":1663279835882,"results":"58","hashOfConfig":"31"},{"size":1417,"mtime":1663280084076,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"cutbge",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\data\\products_seed.js",[],["125","126"],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\functions.js",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\items.js",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputConfig.tsx",["127","128","129"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport classes from './FormInputConfig.module.scss'\r\n\r\nimport Input from 'views/Home/homeComponents/Input/Input'\r\nimport useInitProducts from 'hooks/useInitProducts'\r\nimport { InitialState, ProductsList, ProductForm, Validation } from 'common/types'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst FormInputConfig = () => {\r\n   const [formIsValidState, setFormIsValidState] = useState(false)\r\n   const [productForm, setProductForm] = useState<ProductForm[]>([\r\n      {\r\n         field: 'id',\r\n         config: {\r\n            elementType: false,\r\n            value: '',\r\n            validation: {},\r\n            valid: true,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'nome',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Nome do Produto',\r\n               name: 'nome',\r\n            },\r\n            label: 'Nome do Produto',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'qtde',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Quantidade',\r\n               name: 'qtde',\r\n            },\r\n            label: 'Quantidade',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'valor',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Valor Unitário',\r\n               name: 'valor',\r\n            },\r\n            label: 'Valor Unitário',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'valorTotal',\r\n         config: {\r\n            elementType: false,\r\n            value: 0,\r\n            validation: {},\r\n            valid: true,\r\n            touched: false\r\n         }\r\n      }\r\n   ])\r\n \r\n   const productsDataState = useSelector((state: InitialState) => state.productsDataState)\r\n   const { initProducts } = useInitProducts()\r\n   \r\n   const addIdHandler = (products: ProductsList[]) => {\r\n      const ids: number[] = []\r\n      products.forEach(product => {\r\n         ids.push(product.id!)\r\n      })\r\n\r\n      const currentIds = ids.reduce((sparse: number[], i) => (sparse[i] = 1, sparse), [])\r\n      const missingIds = [...currentIds.keys()].filter(i => i && !currentIds[i])\r\n\r\n      let new_id\r\n      if (missingIds.length > 0) {\r\n         new_id = Math.min(...missingIds)\r\n      } else {\r\n         new_id = ids.length === 0 ? 1 : Math.max(...ids) + 1\r\n      }\r\n\r\n      return new_id\r\n   }\r\n\r\n   const checkFormValidityHandler = (value: string | number, rules: Validation) => {\r\n      let isValid = false\r\n      if (rules.required) {\r\n         isValid = value.toString().trim() !== '' && value !== 0\r\n      }\r\n\r\n      return isValid\r\n   }\r\n\r\n   const inputChangeHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>, i: number) => {\r\n      const updatedProduct = [...productForm]\r\n      const updatedProductField = { ...updatedProduct[i] }\r\n  \r\n      let value = e.target.value\r\n      let name = e.target.name\r\n\r\n      if (name === 'nome') {\r\n         value = value.replace(/^\\s/, \"\")\r\n      }\r\n\r\n      if (name === 'qtde' || name === 'valor') {\r\n         value = value.replace(/^0|[^\\d.]|\\.(?=.*\\.)/g, \"\")\r\n      }\r\n\r\n      updatedProductField.config.value = value\r\n      updatedProductField.config.valid = checkFormValidityHandler(updatedProductField.config.value, updatedProductField.config.validation!)\r\n      updatedProductField.config.touched = true\r\n\r\n      updatedProduct[i] = updatedProductField\r\n      updatedProduct[4].config.value = Number(updatedProduct[2].config.value) * Number(updatedProduct[3].config.value)\r\n\r\n      let formIsValid = true\r\n      updatedProduct.forEach(item => {\r\n         formIsValid = item.config.valid && formIsValid\r\n      })\r\n      \r\n      setProductForm(updatedProduct)\r\n      setFormIsValidState(formIsValid)\r\n   }, [productForm])\r\n\r\n   const submitProductHandler = (products: ProductsList[]) => {\r\n      initProducts('add', products)\r\n      cleanForm()\r\n   }\r\n\r\n   const formatFormHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault()\r\n\r\n      const productFormLocal = [...productForm]\r\n\r\n      productFormLocal[2].config.value = Number(productFormLocal[2].config.value)\r\n      productFormLocal[3].config.value = Number(productFormLocal[3].config.value)\r\n\r\n      const productsList = productsDataState\r\n      productFormLocal[0].config.value = addIdHandler(productsList)\r\n\r\n      const productValues = productFormLocal.reduce<Record<string, any>>((obj, item) => (\r\n         obj[item.field] = item.config.value, obj\r\n      ), {})\r\n\r\n      productsList.push(productValues)\r\n      submitProductHandler(productsList)\r\n      setFormIsValidState(false)\r\n   }\r\n\r\n   const cleanForm = () => {\r\n      const productFormLocal = [...productForm]\r\n\r\n      productFormLocal.forEach((item, i) => {\r\n         item.config.value = ''\r\n         if (i > 0 && i < 4) item.config.valid = false\r\n         if (i > 0 && i < 4) item.config.touched = false\r\n      })\r\n      \r\n      setProductForm(productFormLocal)\r\n   }\r\n\r\n   useEffect(() => {\r\n      initProducts('load')\r\n   }, [])\r\n\r\n\r\n   return (\r\n      <div className={classes.Insert_product_subContainer}>\r\n         <div>\r\n            <h2>Registre Um Novo Produto</h2>\r\n         </div>\r\n         <form\r\n            onSubmit={formatFormHandler}\r\n            className={classes.Insert_product_form}\r\n         >\r\n            <Input\r\n               productForm={productForm}\r\n               changed={(e: React.ChangeEvent<HTMLInputElement>, i: number) => inputChangeHandler(e, i)}\r\n            />\r\n            <button disabled={!formIsValidState}>\r\n               <p>Inserir Produto</p>\r\n               <FontAwesomeIcon icon=\"chevron-circle-right\" />\r\n            </button>\r\n\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default FormInputConfig",["130","131"],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\reducers\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\action-creators\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Input\\Input.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\Home.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormOutputConfig\\FormOutputConfig.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputDesk\\FormInputDesk.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\App.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputMobile\\FormInputMobile.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\OpenFormButton\\OpenFormButton.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\InputSearch\\InputSearch.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductListMobile.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductsListMobileHeader\\ProductsListMobileHeader.tsx",["132"],"import { useState, useEffect } from 'react'\r\n\r\nimport classes from './ProductsListMobileHeader.module.scss'\r\n\r\nimport { InitialState, ProductsList } from 'common/types'\r\n\r\nimport { productsListHeaderItems } from 'helpers/items'\r\nimport useSetOrder from 'hooks/useSetOrder'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst ProductsListMobileHeader = () => {\r\n   const [listOrderState, setListOrder] = useState<string[]>([''])\r\n\r\n   const listOrder = useSelector((state: InitialState) => state.listOrder)\r\n\r\n   const { setOrder } = useSetOrder()\r\n\r\n   const orderListHandler = (e: React.MouseEvent<HTMLParagraphElement>, order: string) => {\r\n      const orderArr = [...listOrderState]\r\n      if (order === orderArr[1]) {\r\n         orderArr[0] === 'up' ?\r\n            orderArr[0] = 'down' :\r\n            orderArr[0] = 'up'\r\n         \r\n         setListOrder(orderArr)\r\n      } else {\r\n         orderArr[0] = 'down'\r\n         setListOrder(orderArr)\r\n      }\r\n\r\n      setOrder([listOrderState[0], order], false)\r\n   }\r\n\r\n   useEffect(() => {\r\n      setListOrder(listOrder)\r\n   }, [listOrder])\r\n\r\n\r\n   return (\r\n      <div id='orderMobileContainer' className={classes.Products_Order_list}>\r\n         {\r\n            productsListHeaderItems.map((item, i) => {\r\n               return <p key={`${item}-${i}`} id={item.id} onClick={e => orderListHandler(e, item.id)}>{item.text}</p>\r\n            })\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProductsListMobileHeader","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsList.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Toastify\\Toastify.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsListQtde\\ProductsListQtde.tsx",["133"],"import classes from './ProductsListQtde.module.scss'\r\n\r\nimport useInitProducts from 'hooks/useInitProducts'\r\n\r\nimport { InitialState } from 'common/types'\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\ninterface Props {\r\n   qtde: number\r\n   id: number\r\n}\r\n\r\nconst ProductsListQtde = ({qtde, id}: Props) => {\r\n   const productsDataState = useSelector((state: InitialState) => state.productsDataState)\r\n   const { initProducts } = useInitProducts()\r\n\r\n   const removeProductHandler = (id: number) => {\r\n      const productsList =\r\n         productsDataState.filter(product =>\r\n            product.id !== id\r\n         )\r\n\r\n      initProducts('remove', productsList)\r\n   }\r\n\r\n   const updateQtdeHandler = (arg: string, id: number) => {\r\n      let productsList = productsDataState.map(product => {\r\n         return { ...product }\r\n      })\r\n\r\n      let localQty = null\r\n\r\n      productsList.forEach((product, i) => {\r\n         if (product.id === id) {\r\n            if (arg === 'up') {\r\n               if (product.qtde && product.valor) {\r\n                  productsList[i].qtde = product.qtde + 1\r\n                  productsList[i].valorTotal = product.qtde * product.valor\r\n               }\r\n            }\r\n\r\n            if (arg === 'down') {\r\n               if (product.qtde && product.valor) {\r\n                  productsList[i].qtde = product.qtde - 1\r\n                  productsList[i].valorTotal = product.qtde * product.valor\r\n               }               \r\n            }\r\n\r\n            localQty = productsList[i].qtde\r\n         }\r\n      })\r\n\r\n      if (qtde > 0) {\r\n         initProducts('updQtde', productsList)\r\n      } else {\r\n         const remove = window.confirm('Quantidade deve ser maior que 0. \\nO produto será excluído!')\r\n\r\n         if (remove === true) removeProductHandler(id)\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className={classes.Product_change_qtde}>\r\n         <FontAwesomeIcon\r\n            icon=\"minus\"\r\n            color=\"rgb(126, 125, 125)\"\r\n            onClick={() => updateQtdeHandler('down', id)}\r\n         />\r\n         <p>{qtde}</p>\r\n         <FontAwesomeIcon\r\n            icon=\"plus\"\r\n            color=\"rgb(126, 125, 125)\"\r\n            onClick={() => updateQtdeHandler('up', id)}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProductsListQtde","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsListHeader\\ProductsListHeader.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.js",["134"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { createStore, applyMiddleware, Store } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\n\r\nimport reducer from './store/reducers'\r\n\r\n// import { InitialState, Action, DispatchType } from 'common/types'\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\n// const store: Store<InitialState, Action> & {\r\n//   dispatch: DispatchType\r\n// } = createStore(reducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <h1>TESTE JS</h1>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\services\\requests.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useActions.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useUpdateSearch.ts",["135"],"import { useEffect } from 'react'\r\n\r\nimport { useActions } from 'hooks/useActions'\r\nimport { useSelector } from 'react-redux'\r\nimport { InitialState, ProductsList } from 'common/types'\r\n\r\n\r\nconst useUpdateSearch = () => {\r\n   const { setSearch } = useActions()\r\n\r\n   const productsDataState = useSelector((state: InitialState) => state.productsDataState)\r\n   const isSearchOn = useSelector((state: InitialState) => state.isSearchOn)   \r\n   const inputValue = useSelector((state: InitialState) => state.inputValue) \r\n   \r\n   const updateSearch = (inputValueArg = inputValue, isSearchOnArg = isSearchOn) => {  \r\n      const data = !productsDataState ? [] : productsDataState\r\n      if (isSearchOnArg) {\r\n         const products: ProductsList[] = []\r\n         const searchKey = new RegExp(inputValueArg, 'gi')        \r\n         data.forEach(item => {\r\n            if (isSearchOnArg) {\r\n               if (item.nome!.match(searchKey)) {\r\n                  products.push(item)\r\n               } \r\n            } \r\n         })\r\n         if (products.length === 0 && isSearchOnArg) products.push({isEmpty: true})\r\n         setSearch(products, isSearchOnArg, inputValueArg)\r\n      } else {\r\n         setSearch(data, false)\r\n      }\r\n   }\r\n\r\n   useEffect(() => {\r\n      updateSearch()\r\n   }, [productsDataState])\r\n   \r\n   return { updateSearch }\r\n\r\n}\r\n\r\nexport default useUpdateSearch","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useInitProducts.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useSetOrder.ts",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":101,"column":76,"nodeType":"142","messageId":"143","endLine":101,"endColumn":77},{"ruleId":"140","severity":1,"message":"141","line":171,"column":45,"nodeType":"142","messageId":"143","endLine":171,"endColumn":46},{"ruleId":"144","severity":1,"message":"145","line":193,"column":7,"nodeType":"146","endLine":193,"endColumn":9,"suggestions":"147"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"148","severity":1,"message":"149","line":5,"column":24,"nodeType":"150","messageId":"151","endLine":5,"endColumn":36},{"ruleId":"148","severity":1,"message":"152","line":52,"column":13,"nodeType":"150","messageId":"151","endLine":52,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":4,"column":40,"nodeType":"150","messageId":"151","endLine":4,"endColumn":45},{"ruleId":"144","severity":1,"message":"155","line":36,"column":7,"nodeType":"146","endLine":36,"endColumn":26,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initProducts'. Either include it or remove the dependency array.","ArrayExpression",["159"],"@typescript-eslint/no-unused-vars","'ProductsList' is defined but never used.","Identifier","unusedVar","'localQty' is assigned a value but never used.","no-unused-vars","'Store' is defined but never used.","React Hook useEffect has a missing dependency: 'updateSearch'. Either include it or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [initProducts]",{"range":"165","text":"166"},"Update the dependencies array to be: [productsDataState, updateSearch]",{"range":"167","text":"168"},[5743,5745],"[initProducts]",[1282,1301],"[productsDataState, updateSearch]"]