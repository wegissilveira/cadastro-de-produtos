[{"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.js":"1","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\App.tsx":"2","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\reducers\\index.ts":"3","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\Home.tsx":"4","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.ts":"5","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Toastify\\Toastify.tsx":"6","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputDesk\\FormInputDesk.tsx":"7","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormOutputConfig\\FormOutputConfig.tsx":"8","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputMobile\\FormInputMobile.tsx":"9","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\OpenFormButton\\OpenFormButton.tsx":"10","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\functions.ts":"11","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductListMobile.tsx":"12","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsList.tsx":"13","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useActions.ts":"14","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputConfig.tsx":"15","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\InputSearch\\InputSearch.tsx":"16","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductsListMobileHeader\\ProductsListMobileHeader.tsx":"17","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsListHeader\\ProductsListHeader.tsx":"18","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useInitProducts.ts":"19","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useSetOrder.ts":"20","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\index.ts":"21","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useUpdateSearch.ts":"22","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\items.ts":"23","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Input\\Input.tsx":"24","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\services\\requests.ts":"25","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\data\\products_seed.ts":"26","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\action-creators\\index.ts":"27","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\common\\types.ts":"28","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsListQtde\\ProductsListQtde.tsx":"29"},{"size":525,"mtime":1686139802453,"results":"30","hashOfConfig":"31"},{"size":622,"mtime":1685709240688,"results":"32","hashOfConfig":"31"},{"size":1092,"mtime":1686343647152,"results":"33","hashOfConfig":"31"},{"size":856,"mtime":1681574936315,"results":"34","hashOfConfig":"31"},{"size":131,"mtime":1681574936279,"results":"35","hashOfConfig":"31"},{"size":1065,"mtime":1681574936483,"results":"36","hashOfConfig":"31"},{"size":230,"mtime":1681574936374,"results":"37","hashOfConfig":"31"},{"size":648,"mtime":1681574936391,"results":"38","hashOfConfig":"31"},{"size":805,"mtime":1681574936381,"results":"39","hashOfConfig":"31"},{"size":497,"mtime":1681574936384,"results":"40","hashOfConfig":"31"},{"size":1289,"mtime":1686340799996,"results":"41","hashOfConfig":"31"},{"size":4794,"mtime":1681574936449,"results":"42","hashOfConfig":"31"},{"size":6844,"mtime":1686342989258,"results":"43","hashOfConfig":"31"},{"size":261,"mtime":1681574936216,"results":"44","hashOfConfig":"31"},{"size":6476,"mtime":1686085234726,"results":"45","hashOfConfig":"31"},{"size":1501,"mtime":1686148167873,"results":"46","hashOfConfig":"31"},{"size":1475,"mtime":1681574936460,"results":"47","hashOfConfig":"31"},{"size":2694,"mtime":1686239894889,"results":"48","hashOfConfig":"31"},{"size":2363,"mtime":1686148179028,"results":"49","hashOfConfig":"31"},{"size":1437,"mtime":1681574936231,"results":"50","hashOfConfig":"31"},{"size":51,"mtime":1681574936296,"results":"51","hashOfConfig":"31"},{"size":1374,"mtime":1686148171483,"results":"52","hashOfConfig":"31"},{"size":458,"mtime":1681574941200,"results":"53","hashOfConfig":"31"},{"size":1827,"mtime":1681574936397,"results":"54","hashOfConfig":"31"},{"size":1906,"mtime":1681574936248,"results":"55","hashOfConfig":"31"},{"size":1110,"mtime":1686249945386,"results":"56","hashOfConfig":"31"},{"size":869,"mtime":1686149557964,"results":"57","hashOfConfig":"31"},{"size":1440,"mtime":1681574936184,"results":"58","hashOfConfig":"31"},{"size":2491,"mtime":1686152030918,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1bwzw2u",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\index.js",[],["123","124"],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\App.tsx",[],["125","126"],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\reducers\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\Home.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Toastify\\Toastify.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputDesk\\FormInputDesk.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormOutputConfig\\FormOutputConfig.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputMobile\\FormInputMobile.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\OpenFormButton\\OpenFormButton.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\functions.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductListMobile.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsList.tsx",["127"],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useActions.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\FormInputConfig\\FormInputConfig.tsx",["128","129","130"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport classes from './FormInputConfig.module.scss'\r\n\r\nimport Input from 'views/Home/homeComponents/Input/Input'\r\nimport useInitProducts from 'hooks/useInitProducts'\r\nimport { InitialState, ProductsList, ProductForm, Validation } from 'common/types'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst FormInputConfig = () => {\r\n   const [formIsValidState, setFormIsValidState] = useState(false)\r\n   const [productForm, setProductForm] = useState<ProductForm[]>([\r\n      {\r\n         field: 'id',\r\n         config: {\r\n            elementType: false,\r\n            value: '',\r\n            validation: {},\r\n            valid: true,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'nome',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Nome do Produto',\r\n               name: 'nome',\r\n            },\r\n            label: 'Nome do Produto',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'qtde',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Quantidade',\r\n               name: 'qtde',\r\n            },\r\n            label: 'Quantidade',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'valor',\r\n         config: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'text',\r\n               placeholder: 'Valor Unitário',\r\n               name: 'valor',\r\n            },\r\n            label: 'Valor Unitário',\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n         }\r\n      },\r\n      {\r\n         field: 'valorTotal',\r\n         config: {\r\n            elementType: false,\r\n            value: 0,\r\n            validation: {},\r\n            valid: true,\r\n            touched: false\r\n         }\r\n      }\r\n   ])\r\n \r\n   const productsDataState = useSelector((state: InitialState) => state.productsDataState)\r\n   const { initProducts } = useInitProducts()\r\n   \r\n   const addIdHandler = (products: ProductsList[]) => {\r\n      const ids: number[] = []\r\n      products.forEach(product => {\r\n         ids.push(product.id!)\r\n      })\r\n\r\n      const currentIds = ids.reduce((sparse: number[], i) => (sparse[i] = 1, sparse), [])\r\n      const missingIds = [...currentIds.keys()].filter(i => i && !currentIds[i])\r\n\r\n      let new_id\r\n      if (missingIds.length > 0) {\r\n         new_id = Math.min(...missingIds)\r\n      } else {\r\n         new_id = ids.length === 0 ? 1 : Math.max(...ids) + 1\r\n      }\r\n\r\n      return new_id\r\n   }\r\n\r\n   const checkFormValidityHandler = (value: string | number, rules: Validation) => {\r\n      let isValid = false\r\n      if (rules.required) {\r\n         isValid = value.toString().trim() !== '' && value !== 0\r\n      }\r\n\r\n      return isValid\r\n   }\r\n\r\n   const inputChangeHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>, i: number) => {\r\n      const updatedProduct = [...productForm]\r\n      const updatedProductField = { ...updatedProduct[i] }\r\n  \r\n      let value = e.target.value\r\n      let name = e.target.name\r\n\r\n      if (name === 'nome') {\r\n         value = value.replace(/^\\s/, \"\")\r\n      }\r\n\r\n      if (name === 'qtde' || name === 'valor') {\r\n         value = value.replace(/^0|[^\\d.]|\\.(?=.*\\.)/g, \"\")\r\n      }\r\n\r\n      updatedProductField.config.value = value\r\n      updatedProductField.config.valid = checkFormValidityHandler(updatedProductField.config.value, updatedProductField.config.validation!)\r\n      updatedProductField.config.touched = true\r\n\r\n      updatedProduct[i] = updatedProductField\r\n      updatedProduct[4].config.value = Number(updatedProduct[2].config.value) * Number(updatedProduct[3].config.value)\r\n\r\n      let formIsValid = true\r\n      updatedProduct.forEach(item => {\r\n         formIsValid = item.config.valid && formIsValid\r\n      })\r\n      \r\n      setProductForm(updatedProduct)\r\n      setFormIsValidState(formIsValid)\r\n   }, [productForm])\r\n\r\n   const submitProductHandler = (products: ProductsList[]) => {\r\n      initProducts('add', products)\r\n      cleanForm()\r\n   }\r\n\r\n   const formatFormHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault()\r\n\r\n      const productFormLocal = [...productForm]\r\n\r\n      productFormLocal[2].config.value = Number(productFormLocal[2].config.value)\r\n      productFormLocal[3].config.value = Number(productFormLocal[3].config.value)\r\n\r\n      const productsList = productsDataState\r\n      productFormLocal[0].config.value = addIdHandler(productsList)\r\n\r\n      const productValues = productFormLocal.reduce<Record<string, any>>((obj, item) => (\r\n         obj[item.field] = item.config.value, obj\r\n      ), {})\r\n\r\n      productsList.push(productValues)\r\n      submitProductHandler(productsList)\r\n      setFormIsValidState(false)\r\n   }\r\n\r\n   const cleanForm = () => {\r\n      const productFormLocal = [...productForm]\r\n\r\n      productFormLocal.forEach((item, i) => {\r\n         item.config.value = ''\r\n         if (i > 0 && i < 4) item.config.valid = false\r\n         if (i > 0 && i < 4) item.config.touched = false\r\n      })\r\n      \r\n      setProductForm(productFormLocal)\r\n   }\r\n\r\n   // useEffect(() => {\r\n   //    initProducts('load')\r\n   // }, [])\r\n\r\n\r\n   return (\r\n      <div className={classes.Insert_product_subContainer}>\r\n         <div>\r\n            <h2>Registre Um Novo Produto</h2>\r\n         </div>\r\n         <form\r\n            onSubmit={formatFormHandler}\r\n            className={classes.Insert_product_form}\r\n         >\r\n            <Input\r\n               productForm={productForm}\r\n               changed={(e: React.ChangeEvent<HTMLInputElement>, i: number) => inputChangeHandler(e, i)}\r\n            />\r\n            <button disabled={!formIsValidState}>\r\n               <p>Inserir Produto</p>\r\n               <FontAwesomeIcon icon=\"chevron-circle-right\" />\r\n            </button>\r\n\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default FormInputConfig","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\InputSearch\\InputSearch.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductListMobile\\ProductsListMobileHeader\\ProductsListMobileHeader.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsList\\ProductsListHeader\\ProductsListHeader.tsx",["131"],"import React, { memo } from 'react'\r\n\r\nimport classes from './ProductsListHeader.module.scss'\r\n\r\nimport { productsListHeaderItems } from 'helpers/items'\r\nimport useSetOrder from 'hooks/useSetOrder'\r\n\r\nimport { ProductKeys } from 'common/types'\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport { InitialState } from 'common/types'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\ntype Props = {\r\n   order: string\r\n}\r\n\r\nconst ProductsListHeader = (props: Props) => {\r\n   const {\r\n      order\r\n   } = props\r\n\r\n   const { listOrder } = useSelector((state: InitialState) => state)\r\n\r\n   const { setOrder } = useSetOrder()\r\n\r\n   const orderListHandler = (order: ProductKeys, direction: string, e: React.MouseEvent<SVGSVGElement>) => {\r\n      setOrder([direction, order], false)\r\n      const arrowOrder = e.currentTarget\r\n      \r\n      Array.from(arrowOrder.parentNode!.parentNode!.children)\r\n         .forEach(item => {\r\n            Array.from(item.children)\r\n               .forEach(subItem => {\r\n                  const el = subItem as HTMLElement\r\n                  if (el.tagName) {\r\n                     el.style.color = 'rgb(126, 125, 125)'\r\n                  }\r\n               })\r\n         })\r\n\r\n      arrowOrder.style.color = 'green'\r\n   }\r\n\r\n   React.useEffect(() => {\r\n      const orderHeaderContainer = document.getElementById('orderContainer')\r\n      const icons = orderHeaderContainer!.getElementsByTagName('svg')\r\n\r\n      Array.from(icons).forEach(icon => {\r\n         icon.style.color = 'rgb(126, 125, 125)'\r\n         \r\n         if (listOrder) {\r\n            if (icon.classList[1].match(order) && icon.parentElement!.id === listOrder[1]) {\r\n               icon.style.color = 'green'\r\n            }\r\n         }\r\n      })\r\n   }, [order])\r\n\r\n\r\n   return (\r\n      <div\r\n         id='orderContainer'\r\n         className={classes.FormOutput_header}\r\n      >\r\n         {\r\n            productsListHeaderItems.map((item, i) => {\r\n               return (\r\n                  <div id={item.id} key={`${item}-${i}`}>\r\n                     <FontAwesomeIcon\r\n                        icon=\"sort-amount-up\"\r\n                        onClick={e => orderListHandler(item.id, 'up', e)}\r\n                        aria-label=\"arrow-up\"\r\n                     />\r\n                     <p>{item.text}</p>\r\n                     <FontAwesomeIcon\r\n                        icon=\"sort-amount-down-alt\"\r\n                        onClick={e => orderListHandler(item.id, 'down', e)}\r\n                        aria-label=\"arrow-down\"\r\n                     />\r\n                  </div>\r\n               )\r\n            })\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default memo(ProductsListHeader)","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useInitProducts.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useSetOrder.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\hooks\\useUpdateSearch.ts",["132"],"import { useEffect } from 'react'\r\n\r\nimport { useActions } from 'hooks/useActions'\r\nimport { useSelector } from 'react-redux'\r\nimport { InitialState, ProductsList } from 'common/types'\r\n\r\n\r\nconst useUpdateSearch = () => {\r\n   const { setSearch } = useActions()\r\n\r\n   const productsDataState = useSelector((state: InitialState) => state.productsDataState)\r\n   const isSearchOn = useSelector((state: InitialState) => state.isSearchOn)   \r\n   const inputValue = useSelector((state: InitialState) => state.inputValue) \r\n   \r\n   const updateSearch = (inputValueArg = inputValue, isSearchOnArg = isSearchOn) => {  \r\n      const data = !productsDataState ? [] : productsDataState\r\n      if (isSearchOnArg) {\r\n         const products: ProductsList[] = []\r\n         const searchKey = new RegExp(inputValueArg, 'gi')        \r\n         data.forEach(item => {\r\n            if (isSearchOnArg) {\r\n               if (item.nome!.match(searchKey)) {\r\n                  products.push(item)\r\n               } \r\n            } \r\n         })\r\n         if (products.length === 0 && isSearchOnArg) products.push({isEmpty: true})\r\n         setSearch(products, isSearchOnArg, inputValueArg)\r\n      } else {\r\n         setSearch(data, false)\r\n      }\r\n   }\r\n\r\n   useEffect(() => {\r\n      updateSearch()\r\n   }, [productsDataState])\r\n   \r\n   return { updateSearch }\r\n\r\n}\r\n\r\nexport default useUpdateSearch","C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\helpers\\items.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\Input\\Input.tsx",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\services\\requests.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\data\\products_seed.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\store\\action-creators\\index.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\common\\types.ts",[],"C:\\Users\\Wegis Silveira\\Documents\\cadastro-de-produtos\\src\\views\\Home\\homeComponents\\ProductsComponent\\ProductsListQtde\\ProductsListQtde.tsx",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":159,"column":7,"nodeType":"139","endLine":159,"endColumn":9,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":101,"column":76,"nodeType":"147","messageId":"148","endLine":101,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":171,"column":45,"nodeType":"147","messageId":"148","endLine":171,"endColumn":46},{"ruleId":"137","severity":1,"message":"149","line":60,"column":7,"nodeType":"139","endLine":60,"endColumn":14,"suggestions":"150"},{"ruleId":"137","severity":1,"message":"151","line":36,"column":7,"nodeType":"139","endLine":36,"endColumn":26,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initProducts'. Either include it or remove the dependency array.","ArrayExpression",["155"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook React.useEffect has a missing dependency: 'listOrder'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'updateSearch'. Either include it or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [initProducts]",{"range":"164","text":"165"},"Update the dependencies array to be: [listOrder, order]",{"range":"166","text":"167"},"Update the dependencies array to be: [productsDataState, updateSearch]",{"range":"168","text":"169"},[5155,5157],"[initProducts]",[1763,1770],"[listOrder, order]",[1282,1301],"[productsDataState, updateSearch]"]