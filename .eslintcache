[{"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\index.js":"1","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\App.js":"2","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\reportWebVitals.js":"3","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\reducers\\reducer.js":"4","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\containers\\Layout\\Layout.js":"5","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.js":"6","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\actions\\index.js":"7","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\containers\\FormInputConfig\\FormInputConfig.js":"8","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\containers\\FormOutputConfig\\FormOutputConfig.js":"9","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\UI\\Toastify\\Toastify.js":"10","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\actions\\products.js":"11","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\UI\\Input\\Input.js":"12","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\ProductsComponent\\ProductsComponent.js":"13","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\data\\products_seed.js":"14","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\ProductsList\\ProductsList.js":"15","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\ProductListMobile\\ProductListMobile.js":"16"},{"size":783,"mtime":1610905165080,"results":"17","hashOfConfig":"18"},{"size":619,"mtime":1629982518690,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610548782901,"results":"20","hashOfConfig":"18"},{"size":750,"mtime":1613761330329,"results":"21","hashOfConfig":"18"},{"size":3376,"mtime":1629981854985,"results":"22","hashOfConfig":"18"},{"size":169,"mtime":1612536680953,"results":"23","hashOfConfig":"18"},{"size":117,"mtime":1611668131284,"results":"24","hashOfConfig":"18"},{"size":8270,"mtime":1629908842371,"results":"25","hashOfConfig":"18"},{"size":4585,"mtime":1629929196056,"results":"26","hashOfConfig":"18"},{"size":794,"mtime":1611670537975,"results":"27","hashOfConfig":"18"},{"size":4091,"mtime":1613761330327,"results":"28","hashOfConfig":"18"},{"size":1325,"mtime":1629902011193,"results":"29","hashOfConfig":"18"},{"size":1219,"mtime":1613680823934,"results":"30","hashOfConfig":"18"},{"size":1638,"mtime":1630012263766,"results":"31","hashOfConfig":"18"},{"size":9623,"mtime":1629929721101,"results":"32","hashOfConfig":"18"},{"size":5662,"mtime":1629927785232,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1j45how",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\index.js",[],["69","70"],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\App.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\reportWebVitals.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\reducers\\reducer.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\containers\\Layout\\Layout.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\actions\\actionTypes.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\actions\\index.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\containers\\FormInputConfig\\FormInputConfig.js",["71"],"import React, { Component } from 'react'\r\n\r\nimport classes from './FormInputConfig.module.css'\r\n\r\nimport Input from '../../components/UI/Input/Input'\r\nimport * as productActions from '../../store/actions/index'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass FormInputConfig extends Component {\r\n\r\n    state = {\r\n        productForm: {\r\n            id: {\r\n                elementType: false,\r\n                value: '',\r\n                validation: {},\r\n                valid: true,\r\n                touched: false\r\n            },\r\n            nome: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Nome do Produto',\r\n                    name: 'nome',\r\n                },\r\n                label: 'Nome do Produto',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            qtde: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Quantidade',\r\n                    name: 'qtde',\r\n                },\r\n                label: 'Quantidade',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            valor: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Valor Unitário',\r\n                    name: 'valor',\r\n                },\r\n                label: 'Valor Unitário',\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            valorTotal: {\r\n                elementType: false,\r\n                value: 0,\r\n                validation: {},\r\n                valid: true,\r\n                touched: false\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.onInitProducts('load')\r\n    }\r\n\r\n    closeResponsiveFormHandler = () => {\r\n        this.props.toggleForm()\r\n    }\r\n\r\n    addIdHandler = products => {    \r\n        const ids = []\r\n        products.forEach(product => {\r\n            ids.push(product.id)\r\n        })\r\n\r\n        const sparse = ids.reduce((sparse, i) => (sparse[i]=1,sparse), [])\r\n        const x = [...sparse.keys()].filter(i => i && !sparse[i])\r\n\r\n        let new_id\r\n        if (x.length > 0) {\r\n            new_id = Math.min(...x)\r\n        } else {\r\n            new_id = ids.length === 0 ? 1 : Math.max(...ids) + 1\r\n        }\r\n\r\n        return new_id\r\n    }\r\n\r\n    checkFormValidityHandler(value, rules) {\r\n        let isValid = false\r\n\r\n        if (rules.required) {\r\n            isValid = value.toString().trim() !== '' && value !== 0\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    inputChangeHandler = (e, field) => {\r\n        let updatedProduct = {...this.state.productForm}\r\n        let updatedProductField = {...updatedProduct[field]}\r\n\r\n        let value = e.target.value\r\n        let name = e.target.name\r\n\r\n        if (name === 'nome') {\r\n            value = value.replace(/^\\s/, \"\")\r\n        }\r\n\r\n        if (name === 'qtde' || name === 'valor') {\r\n            value = value.replace(/^0|[^\\d.]|\\.(?=.*\\.)/g, \"\")\r\n        }\r\n\r\n        updatedProductField.value = value\r\n        updatedProductField.valid = this.checkFormValidityHandler(updatedProductField.value, updatedProductField.validation)\r\n        updatedProductField.touched = true\r\n\r\n        updatedProduct[field] = updatedProductField\r\n        updatedProduct.valorTotal.value = updatedProduct.qtde.value * updatedProduct.valor.value\r\n\r\n        let formIsValid = true\r\n        for (let field in updatedProduct) {\r\n            formIsValid = updatedProduct[field].valid && formIsValid\r\n        }\r\n\r\n        this.setState({\r\n            productForm: updatedProduct,\r\n            formIsValid\r\n        })\r\n    }\r\n\r\n    submitProductHandler = product => {\r\n        this.props.onPostProducts(product)\r\n        this.cleanForm()\r\n    }\r\n\r\n    formatFormHandler = e => {\r\n        e.preventDefault()\r\n\r\n        let productForm = {...this.state.productForm}\r\n        \r\n        productForm.qtde.value = Number(productForm.qtde.value)\r\n        productForm.valor.value = Number(productForm.valor.value)\r\n\r\n        const productsList = this.props.productsList\r\n        productForm.id.value = this.addIdHandler(productsList)\r\n\r\n        const productValues = {}\r\n        for (let key in productForm) {\r\n            productValues[key] = productForm[key].value\r\n        }\r\n\r\n        productsList.push(productValues)\r\n\r\n        this.submitProductHandler(productsList)\r\n        this.setState({formIsValid: false})\r\n    }\r\n\r\n    cleanForm = () => {\r\n        let productForm = {...this.state.productForm}\r\n\r\n        for (let key in productForm) {\r\n            productForm[key].value = ''\r\n        }\r\n\r\n        this.setState({productForm})\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        \r\n        const productForm = []\r\n        for (let key in this.state.productForm) {\r\n            productForm.push({\r\n                field: key,\r\n                config: this.state.productForm[key]\r\n            })\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <div \r\n                className={classes.Insert_product_container}\r\n                id='responsive_form'\r\n            >\r\n                <FontAwesomeIcon \r\n                    icon=\"external-link-alt\" \r\n                    color=\"red\" \r\n                    size=\"3x\"\r\n                    onClick={this.closeResponsiveFormHandler}\r\n                />\r\n                <div className={classes.Insert_product_subContainer}>\r\n                    <div>\r\n                        <h2>Registre Um Novo Produto</h2>\r\n                    </div>\r\n                    <form \r\n                        onSubmit={this.formatFormHandler} \r\n                        className={classes.Insert_product_form}\r\n                    >\r\n                        <div>\r\n                            {productForm.map(el => {\r\n                                let input\r\n                                if (el.config.elementType !== false) {\r\n                                    input = <Input\r\n                                                key={el.field}\r\n                                                elementType={el.config.elementType} \r\n                                                elementConfig={el.config.elementConfig} \r\n                                                value={el.config.value} \r\n                                                invalid={!el.config.valid}\r\n                                                touched={el.config.touched}\r\n                                                label={el.config.label}\r\n                                                changed={e => this.inputChangeHandler(e, el.field)}\r\n                                            />\r\n                                }\r\n                                return input\r\n                            })}\r\n                        </div>\r\n                        \r\n                        <button disabled={!this.state.formIsValid}>\r\n                            <p>Inserir Produto</p>\r\n                            <FontAwesomeIcon \r\n                                icon=\"chevron-circle-right\" \r\n                            />\r\n                        </button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productsList: state.productsDataState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPostProducts: products =>\r\n            dispatch(productActions.postProducts(products)),\r\n        onInitProducts: origin => \r\n            dispatch(productActions.initProducts(origin))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormInputConfig)","D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\containers\\FormOutputConfig\\FormOutputConfig.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\UI\\Toastify\\Toastify.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\store\\actions\\products.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\UI\\Input\\Input.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\ProductsComponent\\ProductsComponent.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\data\\products_seed.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\ProductsList\\ProductsList.js",[],"D:\\Desktop HD\\Curso-React.js\\react-complete-guide\\cadastro-de-produtos\\src\\components\\ProductListMobile\\ProductListMobile.js",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":94,"column":62,"nodeType":"80","messageId":"81","endLine":94,"endColumn":63},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["84"],["85"],"no-global-assign","no-unsafe-negation"]